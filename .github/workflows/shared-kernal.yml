name: Publish Shared Kernel

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - src/BlueBank/BlueBank.SharedKernel/**
    - .github/workflows/shared-kernal.yml
  pull_request:
    branches: [ main ]
    paths:
    - src/BlueBank/BlueBank.SharedKernel/**
    - .github/workflows/shared-kernal.yml

env:
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/minaelnagar/_packaging/minaelnagar/nuget/v3/index.json            # set this to the registry url for your Azure Artifacts Feed, you will find this in Azure DevOps
  BUILD_CONFIGURATION: 'Release'                                                          # set this to the appropriate build configuration
  DOTNET_VERSION: '5.0.x'                                                                 # set this to the dot net version to use

defaults:
   run:
    working-directory: ./src/BlueBank/BlueBank.SharedKernel

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v2
      
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      # Run dotnet build and package
      - name: dotnet build and test
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet test --configuration '${{ env.BUILD_CONFIGURATION }}'
      
  az-artifacts-build-and-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@master
      
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_FEED_PAT }} # Setup the .NET Core SDK with the appropriate auth token to access the GitHub Package Registry
      
      # Run dotnet build and package
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}'
          
      # Publish the package to Azure Artifacts
      - name: 'dotnet publish'
        run: dotnet nuget push --api-key AzureArtifacts bin/Release/*.nupkg
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_FEED_PAT }} # Setup the .NET Core SDK with the appropriate auth token to access the GitHub Package Registry

